Протестировал сборку на ubuntu 22.04. Необходимые пакеты упаковал в requirements.txt (теоретически все что там не лежит - встроенное в сам питон):

sudo apt install python3-pip

pip install -r requirements.txt

Запуск клиента и сервера производить в разных окнах терминала, либо делать сервер фоновым процессом.

Запуск сервера происходит следующей командой:

python3 server.py -t (количество желаемых потоков) -c (желаемый каталог карантина)

Можно и без ключей, по дефолту указан 1 поток и каталог quaranteen.

Запуск клиента:

python3 client.py -r (указать режим либо 'CheckLocalFile' либо 'QuarantineLocalFile') -f (указать файл) -p (указать паттерн при работе с вычислением смещений сигнатур)

Сигнатуры/паттерны байтов для поиска подавать в виде единой hex строчки (т.е. 2 hex символа на байт), например '23ac' 

Запуск автотестов: 

py.test -s -v test.py

Также для удобства - генератор рандомных бинарных файлов:

python3 generator.py -s (размер в байтах, по умолчанию 1024) -n (имя файла, по умолчанию dummy.bin)

Возможный небольшой баг:
    Вероятно либо изза свойств системы, иногда порт может блокироваться после
    запуска и выключения сервера на непродолжительное время - соотвественно не получается стартовать сервер по новой,
    в таком случае рекомендую поменять прописанный порт в клиенте и сервере. В редких случаях может зависнуть процесс,
    но в тестах такого не возникало. Соотвественно убить процесс через kill -9 PID.


#Решил для унификации сделать преобразование из хекса в понимаемый питоном байтовый хекс, т.е. например вход '23' в '\x23' = '#'
